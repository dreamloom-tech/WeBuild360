{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/workers/salary/salary.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"col\": \"salary-module__lfX2ma__col\",\n  \"colCheckbox\": \"salary-module__lfX2ma__colCheckbox\",\n  \"container\": \"salary-module__lfX2ma__container\",\n  \"daily\": \"salary-module__lfX2ma__daily\",\n  \"dateBox\": \"salary-module__lfX2ma__dateBox\",\n  \"dateInput\": \"salary-module__lfX2ma__dateInput\",\n  \"emptyText\": \"salary-module__lfX2ma__emptyText\",\n  \"formHeader\": \"salary-module__lfX2ma__formHeader\",\n  \"input\": \"salary-module__lfX2ma__input\",\n  \"monthly\": \"salary-module__lfX2ma__monthly\",\n  \"paid\": \"salary-module__lfX2ma__paid\",\n  \"payBtn\": \"salary-module__lfX2ma__payBtn\",\n  \"row\": \"salary-module__lfX2ma__row\",\n  \"salaryFormBox\": \"salary-module__lfX2ma__salaryFormBox\",\n  \"sectionHeader\": \"salary-module__lfX2ma__sectionHeader\",\n  \"select\": \"salary-module__lfX2ma__select\",\n  \"submitBtn\": \"salary-module__lfX2ma__submitBtn\",\n  \"table\": \"salary-module__lfX2ma__table\",\n  \"tableWrapper\": \"salary-module__lfX2ma__tableWrapper\",\n  \"title\": \"salary-module__lfX2ma__title\",\n  \"unpaid\": \"salary-module__lfX2ma__unpaid\",\n  \"weekly\": \"salary-module__lfX2ma__weekly\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///F:/Webuild360/client/src/app/workers/salary/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport styles from \"./salary.module.css\";\r\n\r\nexport default function StaffSalary() {\r\n  // Mock fetching from ManageStaff (later connect with real storage or context)\r\n  const [staffList, setStaffList] = useState<any[]>([]);\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [selectedStaff, setSelectedStaff] = useState<any | null>(null);\r\nconst [salaryForm, setSalaryForm] = useState({\r\n  projectName: \"\",\r\n  deductAdvance: \"\",\r\n  givenAmount: \"\",\r\n});\r\n\r\n  const [paymentHistory, setPaymentHistory] = useState<any[]>([]);\r\n\r\n  // Load mock staff data (you can fetch from localStorage or DB)\r\n  useEffect(() => {\r\n    const mockData = [\r\n      { firstName: \"John\", lastName: \"David\", workerType: \"Engineer\", salary: 30000, wageType: \"Monthly\", advance: 5000 },\r\n      { firstName: \"Arun\", lastName: \"Kumar\", workerType: \"Helper\", salary: 12000, wageType: \"Weekly\", advance: 0 },\r\n      { firstName: \"Ravi\", lastName: \"Shankar\", workerType: \"Carpenter\", salary: 800, wageType: \"Daily\", advance: 200 },\r\n    ];\r\n    setStaffList(mockData);\r\n  }, []);\r\n\r\n  const handleSalaryButtonClick = (staff: any) => {\r\n    setSelectedStaff(staff);\r\n  };\r\n\r\n  const handleSalaryChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setSalaryForm({\r\n      ...salaryForm,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleSalarySubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!selectedStaff) return;\r\n\r\n    const advance = selectedStaff.advance || 0;\r\n    const salary = selectedStaff.salary || 0;\r\n    const given = Number(salaryForm.givenAmount) || 0;\r\n    const deducted = Number(salaryForm.deductAdvance) || 0;\r\n    const totalPaid = given + deducted;\r\n    const pending = salary - totalPaid;\r\n\r\n    const record = {\r\n      name: `${selectedStaff.firstName} ${selectedStaff.lastName}`,\r\n      type: selectedStaff.workerType,\r\n      salary: salary,\r\n      paid: totalPaid,\r\n      pending: pending <= 0 ? 0 : pending,\r\n      status: pending <= 0 ? \"Paid\" : \"Unpaid\",\r\n    };\r\n\r\n    setPaymentHistory([...paymentHistory, record]);\r\n    setSelectedStaff(null);\r\n    setSalaryForm({ projectName: \"\", deductAdvance: false, givenAmount: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>Staff Salary Management</h1>\r\n\r\n      {/* Date Selection */}\r\n      <div className={styles.dateBox}>\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={(e) => setSelectedDate(e.target.value)}\r\n          className={styles.dateInput}\r\n        />\r\n      </div>\r\n\r\n      {selectedDate && (\r\n        <>\r\n          {/* Staff List */}\r\n          <h2 className={styles.sectionHeader}>Staff List</h2>\r\n          <div className={styles.tableWrapper}>\r\n            <table className={styles.table}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Type</th>\r\n                  <th>Salary</th>\r\n                  <th>Salary Type</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {staffList.map((staff, i) => (\r\n                  <tr key={i}>\r\n                    <td>{staff.firstName} {staff.lastName}</td>\r\n                    <td>{staff.workerType}</td>\r\n                    <td>{staff.salary}</td>\r\n                    <td>{staff.wageType}</td>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => handleSalaryButtonClick(staff)}\r\n                        className={`${styles.payBtn} ${\r\n                          staff.wageType === \"Daily\"\r\n                            ? styles.daily\r\n                            : staff.wageType === \"Weekly\"\r\n                            ? styles.weekly\r\n                            : styles.monthly\r\n                        }`}\r\n                      >\r\n                        Pay {staff.wageType} Salary\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Salary Form */}\r\n          {selectedStaff && (\r\n            <div className={styles.salaryFormBox}>\r\n              <h2 className={styles.formHeader}>Pay Salary - {selectedStaff.firstName} {selectedStaff.lastName}</h2>\r\n              <form onSubmit={handleSalarySubmit}>\r\n                <div className={styles.row}>\r\n                  <div className={styles.col}>\r\n                    <label>Advance Amount:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={selectedStaff.advance}\r\n                      disabled\r\n                      className={styles.input}\r\n                    />\r\n                  </div>\r\n                  <div className={styles.col}>\r\n                    <label>Salary:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={selectedStaff.salary}\r\n                      disabled\r\n                      className={styles.input}\r\n                    />\r\n                  </div>\r\n                  <div className={styles.col}>\r\n                    <label>Wage Type:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={selectedStaff.wageType}\r\n                      disabled\r\n                      className={styles.input}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={styles.row}>\r\n                  <div className={styles.col}>\r\n                    <label>Project Name:</label>\r\n                    <select\r\n                      name=\"projectName\"\r\n                      value={salaryForm.projectName}\r\n                      onChange={handleSalaryChange}\r\n                      className={styles.select}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select Project</option>\r\n                      <option>Residential Building</option>\r\n                      <option>Shopping Complex</option>\r\n                      <option>Mobile Shop Renovation</option>\r\n                      <option>Office Interior Work</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className={styles.col}>\r\n  <label>Deduct Advance from Salary (â‚¹):</label>\r\n  <input\r\n    type=\"number\"\r\n    name=\"deductAdvance\"\r\n    value={salaryForm.deductAdvance}\r\n    onChange={handleSalaryChange}\r\n    placeholder=\"Enter amount to deduct\"\r\n    className={styles.input}\r\n  />\r\n</div>\r\n\r\n\r\n                  <div className={styles.col}>\r\n                    <label>Given Amount:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"givenAmount\"\r\n                      value={salaryForm.givenAmount}\r\n                      onChange={handleSalaryChange}\r\n                      placeholder=\"Enter Amount\"\r\n                      className={styles.input}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className={styles.submitBtn}>Submit Salary</button>\r\n              </form>\r\n            </div>\r\n          )}\r\n\r\n          {/* Payment History */}\r\n          <h2 className={styles.sectionHeader}>Payment History</h2>\r\n          <div className={styles.tableWrapper}>\r\n            <table className={styles.table}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Type</th>\r\n                  <th>Salary</th>\r\n                  <th>Paid</th>\r\n                  <th>Pending</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {paymentHistory.length > 0 ? (\r\n                  paymentHistory.map((p, index) => (\r\n                    <tr key={index}>\r\n                      <td>{p.name}</td>\r\n                      <td>{p.type}</td>\r\n                      <td>{p.salary}</td>\r\n                      <td>{p.paid}</td>\r\n                      <td>{p.pending}</td>\r\n                      <td className={p.status === \"Paid\" ? styles.paid : styles.unpaid}>\r\n                        {p.status}\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan={6} className={styles.emptyText}>\r\n                      No payment history found.\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}