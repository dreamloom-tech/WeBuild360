// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../src/app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/funds/expense/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/funds/expense">> = Specific
  const handler = {} as typeof import("../../src/app/funds/expense/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/funds/inflow/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/funds/inflow">> = Specific
  const handler = {} as typeof import("../../src/app/funds/inflow/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/materials/manage/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/materials/manage">> = Specific
  const handler = {} as typeof import("../../src/app/materials/manage/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/materials/transfer/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/materials/transfer">> = Specific
  const handler = {} as typeof import("../../src/app/materials/transfer/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/projects/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/projects">> = Specific
  const handler = {} as typeof import("../../src/app/projects/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/reports/project-report/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reports/project-report">> = Specific
  const handler = {} as typeof import("../../src/app/reports/project-report/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/settings/categories/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/categories">> = Specific
  const handler = {} as typeof import("../../src/app/settings/categories/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/settings/company/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/company">> = Specific
  const handler = {} as typeof import("../../src/app/settings/company/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/workers/advance/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/workers/advance">> = Specific
  const handler = {} as typeof import("../../src/app/workers/advance/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/workers/manage/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/workers/manage">> = Specific
  const handler = {} as typeof import("../../src/app/workers/manage/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/workers/salary/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/workers/salary">> = Specific
  const handler = {} as typeof import("../../src/app/workers/salary/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}







// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
